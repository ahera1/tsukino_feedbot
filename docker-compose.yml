version: '3.8'

services:

  # 継続実行専用サービス（デーモンモード）
  tsukino-feedbot-daemon:
    build: .
    container_name: tsukino-feedbot-daemon
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    env_file:
      - .env
    environment:
      - TZ=Asia/Tokyo
    restart: unless-stopped
    command: python -c "from main import FeedBot; bot = FeedBot(); bot.run_continuous()"
    profiles:
      - daemon
    
    # ヘルスチェック（データファイルの存在確認）
    healthcheck:
      test: ["CMD-SHELL", "test -f /app/data/articles.json && test -f /app/data/feeds.json"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
  # ワンショット実行用サービス
  tsukino-feedbot-once:
    build: .
    container_name: tsukino-feedbot-once
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    env_file:
      - .env
    environment:
      - TZ=Asia/Tokyo
      - RUN_MODE=once
    profiles:
      - once
    
    # ヘルスチェック（データファイルの存在確認）
    healthcheck:
      test: ["CMD-SHELL", "test -f /app/data/articles.json && test -f /app/data/feeds.json"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # ステータス確認用サービス
  tsukino-feedbot-status:
    build: .
    container_name: tsukino-feedbot-status
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    env_file:
      - .env
    environment:
      - TZ=Asia/Tokyo
      - RUN_MODE=status
    profiles:
      - status
    
    # ヘルスチェック（データファイルの存在確認）
    healthcheck:
      test: ["CMD-SHELL", "test -f /app/data/articles.json && test -f /app/data/feeds.json"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # クリーンアップ用サービス
  tsukino-feedbot-cleanup:
    build: .
    container_name: tsukino-feedbot-cleanup
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    env_file:
      - .env
    environment:
      - TZ=Asia/Tokyo
      - RUN_MODE=cleanup
    profiles:
      - cleanup
    
    # ヘルスチェック（データファイルの存在確認）
    healthcheck:
      test: ["CMD-SHELL", "test -f /app/data/articles.json && test -f /app/data/feeds.json"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
